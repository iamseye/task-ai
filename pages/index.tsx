import Head from 'next/head';
import { Inter } from 'next/font/google';
import { useState, SyntheticEvent } from 'react';

import Header from '@/components/Header.component';
import GoalInputForm from '@/components/GoalInputForm.component';
import TextCard from '@/components/TextCard.component';
import Quote from '@/components/Quote.component';
import { ENCOURAGE_FORMAT } from '@/utils/open-ai';
import { useScrollToView } from '@/utils/hooks';
import Footer from '@/components/Footer.component';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [inputGoal, setInputGoal] = useState('');
  const [isLoading, setLoading] = useState(false);
  const [generatedAIResponse, setGeneratedAIResponse] = useState('');

  const ref = useScrollToView();

  const onSubmitGenerate = async (event: SyntheticEvent) => {
    event.preventDefault();
    setLoading(true);
    setGeneratedAIResponse('');

    if (inputGoal) {
      const response = await fetch('/api/generateMilestones', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          prompt: inputGoal,
        }),
      });

      if (!response.ok) {
        throw new Error(response.statusText);
      }

      try {
        //readable stream
        const data = response.body;
        if (!data) {
          return;
        }

        const reader = data.getReader();
        const decoder = new TextDecoder();
        let done = false;

        while (!done) {
          const { value, done: doneReading } = await reader.read();
          done = doneReading;
          const chunkValue = decoder.decode(value);

          setGeneratedAIResponse((prev) => prev + chunkValue);
        }
      } catch (err) {
        console.log('Looks like OpenAI timed out :(', err);
      }

      setLoading(false);
    }
  };

  return (
    <div className="flex max-w-6xl mx-auto flex-col items-center justify-center py-2 min-h-screen">
      <Head>
        <title>Build Milestones</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="flex flex-col align-middle p-16 min-h-[80vh]">
        <div>
          <h1 className="text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl">
            Build actionable milestones to achieve your goals
          </h1>
          <GoalInputForm
            isLoading={isLoading}
            setInputGoal={setInputGoal}
            onSubmitGenerate={onSubmitGenerate}
          />

          {generatedAIResponse && (
            <div ref={ref}>
              {generatedAIResponse?.split('\n\n').map((line) => {
                const match = line.match(/\d\.\s*(.*?):\s*(.*)/);
                if (match) {
                  const [, title, description] = match;
                  return (
                    <TextCard key={title} title={title} text={description} />
                  );
                } else {
                  const match = line.match(
                    new RegExp(`${ENCOURAGE_FORMAT}\\s*(.*)`)
                  );
                  if (match) {
                    const [, description] = match;
                    return <Quote key={description} text={description} />;
                  }
                }
              })}
            </div>
          )}
        </div>
      </main>
      <Footer />
    </div>
  );
}
